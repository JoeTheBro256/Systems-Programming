#!/bin/bash

# Put your code here
# You may only use the following external programs: ls, echo, awk, cat, grep, sort, wc, bc
# Order resumes based on certain Keywords

argArray=()

for files in submissions/*
do
	argArray+=($files)
done


#echo ${argArray[@]}

gawk 'BEGIN{
	while((getline line <"testcases/input.txt1") > 0){
		match(line,/([[:digit:].]+)/,a);
		split(line,ar,a[1]);
		ar[1]=substr(ar[1],1,length(ar[1])-1);
		Map[ar[1]]=a[1];
	}
	Total = 0;
	split("",filenames)
	for(f in argArray){
		print f
	}
}
{
	#Use Grep!!!
	#(FNR==1)&&(NR!=1)
	if(fname != FILENAME){ #FNR counts the number of lines in the new input field starting with 1!
		#Reformat name
		#name = FILENAME
		#gsub(/submissions\//,"",name)
		#Map1[name]=Total; #Maps Filename to total
		#Reset total
		Total=0
		#print $FILENAME
		for(k in Map){
			#var3=format,k,FILENAME
			"grep -i \"" k "\" " FILENAME " | wc -l" | getline n
			#print n
			#n=system(cmd)
			Total+=Map[k]*n
			#print Map[k],n
			#print Map[k]*n
		}
		print Total,FILENAME
	}
	#for(k in Map){
	#	Total+=Map[k]*gsub(/k/,"",$0);
	#	n=system("grep -o $k $FILENAME | wc -l")
	#	print n
	#}
	#print NR,FNR
	fname=FILENAME
}
END{

	#for(k in Map1){
		#print Map1[k],k
	#}

	max=0
	name
	split("",sortedVal)
	split("",sortedName)
	i=0
	#Find the max total each loop
	#for(k in Map1){
	#	for(k in Map1){
	#		if(max<Map1[k]){
	#			max=Map1[k];
	#			name=k;
	#		}
	#	}
	#	sortedVal[i]=max;
	#	sortedName[i]=name;
	#	#print name
	#	delete Map1[name];
	#	max=0
	#}

	#for(k in Map1){
	#	sortedVal[i+1]=Map1[k];
	#	sortedName[i+1]=k;
	#}

	#for(k in Map1){
	#	#print Map1[k],k
	#}

	#for(j=0; j<=i-1; j++){
		#print sortedVal[j],sortedName[j]
	#}

}' ${argArray[@]}



